{"version":3,"sources":["node_modules/promise-polyfill/dist/polyfill.js"],"names":[],"mappings":"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","file":"polyfill.d783f63c.js","sourceRoot":"..","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = finallyConstructor;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\n/** @suppress {undefinedVars} */\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!('Promise' in globalNS)) {\n  globalNS['Promise'] = Promise;\n} else if (!globalNS.Promise.prototype['finally']) {\n  globalNS.Promise.prototype['finally'] = finallyConstructor;\n}\n\n})));\n"]}