{"version":3,"sources":["app.js"],"names":["center","lowerLat","upperLat","lowerLong","upperLong","mapboxgl","accessToken","window","$map","remove","map","Map","fitBounds","innerWidth","innerHeight","addControl","AttributionControl","NavigationControl","GeolocateControl","PitchControl","_map","container","document","createElement","className","innerHTML","onclick","pitch","getPitch","nextPitch","easeTo","on","onPitch","bind","_container","classList","toggle","getElementsByTagName","style","transform","parentNode","removeChild","off","undefined","cloudsMode","CloudsModeControl","body","setLayoutProperty","$legend","getElementById","add","uniqMinute","Math","floor","Date","getMinutes","stationsMap","genReadingsGeoJSON","data","metadata","stations","forEach","station","id","location","latitude","longitude","items","readings","reading","value","station_id","HOST","sources","$datetime","$loader","e","hidden","dataDone","setTimeout","showRain","rainSource","getSource","setData","rain","addSource","addLayer","labelLayerId","loadImage","rainDrops","image","addImage","currentPitch","then","res","text","html","match","replace","m","m1","m2","h","parseInt","ampm","showObservations","observationsSource","observations","arrowPath","sdf","rafInterval","fn","delay","rafint","start","requestAnimationFrame","fnTimeout","stop","clearTimeout","layers","getStyle","i","length","type","layout","degtorad","PI","compassHeading","alpha","beta","gamma","_x","_y","_z","cY","cos","cZ","sX","sin","sY","sZ","Vx","Vy","atan","$windCompasss","DeviceOrientationEvent","deviceorientation","addEventListener","heading","webkitCompassHeading"],"mappings":"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","file":"app.6704eac7.map","sourceRoot":"..","sourcesContent":["import arrowPath from './assets/arrow-down.png';\nimport rainDrops from './assets/rain.png';\n\nconst center = [103.8475, 1.3011];\nconst lowerLat = 1.156, upperLat = 1.475, lowerLong = 103.565, upperLong = 104.130;\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2hlZWF1biIsImEiOiIwMTkyNjRiOWUzOTMyZThkYTE3YjMyMWFiZGU2OTZlNiJ9.XsOEKtyctGiNGNsmVhetYg';\nif (window.$map) window.$map.remove();\nconst map = window.$map = new mapboxgl.Map({\n  container: 'map',\n  center,\n  style: 'mapbox://styles/mapbox/dark-v9?optimize=true',\n  logoPosition: 'top-right',\n  minZoom: 8,\n  maxZoom: 14,\n  renderWorldCopies: false,\n  boxZoom: false,\n  attributionControl: false,\n});\nmap.fitBounds([lowerLong, lowerLat, upperLong, upperLat], {\n  animate: false,\n  padding: window.innerWidth > 480 && window.innerHeight > 480 ? 120 : 0,\n});\n\n// Controls\nmap.addControl(new mapboxgl.AttributionControl({\n  compact: true\n}), 'top-right');\nmap.addControl(new mapboxgl.NavigationControl(), 'top-right');\nmap.addControl(new mapboxgl.GeolocateControl({\n  positionOptions: {\n    enableHighAccuracy: true,\n  },\n  trackUserLocation: true,\n}));\n\n// Pitch control\nclass PitchControl {\n  onAdd(map) {\n    this._map = map;\n    const container = document.createElement('div');\n    container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\n    container.innerHTML = '<button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-custom-pitch\" type=\"button\"><span>3D</span></button>';\n    container.onclick = function(){\n      var pitch = map.getPitch();\n      var nextPitch = 0;\n      if (pitch < 30) {\n        nextPitch = 30;\n      } else if (pitch < 45) {\n        nextPitch = 45;\n      } else if (pitch < 60) {\n        nextPitch = 60;\n      }\n      map.easeTo({ pitch: nextPitch });\n    };\n    map.on('pitchend', this.onPitch.bind(this));\n    this._container = container;\n    return this._container;\n  }\n  onPitch() {\n    const pitch = this._map.getPitch();\n    this._container.classList.toggle('active', !!pitch);\n    const text = this._container.getElementsByTagName('span')[0];\n    text.style.transform = 'rotate3d(1,0,0,' + pitch + 'deg)';\n  }\n  onRemove() {\n    this._container.parentNode.removeChild(this._container);\n    this._map.off('pitchend', this.onPitch.bind(this));\n    this._map = undefined;\n  }\n};\nmap.addControl(new PitchControl(), 'top-right');\n\n// Clouds Mode control\nlet cloudsMode = false;\nclass CloudsModeControl {\n  onAdd(map) {\n    this._map = map;\n    const container = document.createElement('div');\n    container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\n    container.innerHTML = `<button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-custom-clouds-mode\" type=\"button\">\n      <svg viewBox=\"0 0 640 512\">\n        <path d=\"M537.585 226.56C541.725 215.836 544 204.184 544 192c0-53.019-42.981-96-96-96-19.729 0-38.065 5.954-53.316 16.159C367.042 64.248 315.288 32 256 32c-88.366 0-160 71.634-160 160 0 2.728.07 5.439.204 8.133C40.171 219.845 0 273.227 0 336c0 79.529 64.471 144 144 144h368c70.692 0 128-57.308 128-128 0-61.93-43.983-113.586-102.415-125.44z\"/>\n      </svg>\n    </button>`;\n    container.onclick = function(){\n      cloudsMode = !cloudsMode;\n      container.classList.toggle('active', cloudsMode);\n      document.body.classList.toggle('cloud-mode', cloudsMode);\n      if (cloudsMode){\n        map.setLayoutProperty('rain3d', 'visibility', 'none');\n        map.setLayoutProperty('rainlay', 'visibility', 'none');\n        map.setLayoutProperty('rainclouds', 'visibility', 'visible');\n        map.setLayoutProperty('raindrops', 'visibility', 'visible');\n        map.setLayoutProperty('raincloudshadows', 'visibility', 'visible');\n        map.easeTo({\n          pitch: 60,\n        });\n      } else {\n        const pitch = map.getPitch();\n        map.setLayoutProperty('rain3d', 'visibility', pitch > 0 ? 'visible' : 'none');\n        map.setLayoutProperty('rainlay', 'visibility', pitch > 0 ? 'none' : 'visible');\n        map.setLayoutProperty('rainclouds', 'visibility', 'none');\n        map.setLayoutProperty('raindrops', 'visibility', 'none');\n        map.setLayoutProperty('raincloudshadows', 'visibility', 'none');\n      }\n    };\n    this._container = container;\n    return this._container;\n  }\n  onRemove() {\n    this._container.parentNode.removeChild(this._container);\n    this._map = undefined;\n  }\n}\nmap.addControl(new CloudsModeControl(), 'top-right');\n\n// Fade out the legend when interacting on the map\nconst $legend = document.getElementById('legend');\nmap.on('movestart', () => $legend.classList.add('faded'));\nmap.on('moveend', () => $legend.classList.remove('faded'));\n\nconst uniqMinute = () => {\n  return Math.floor((new Date()).getMinutes()/5)*5;\n};\n\nconst stationsMap = {};\nconst genReadingsGeoJSON = (data) => {\n  data.metadata.stations.forEach(station => {\n    if (stationsMap[station.id]) return;\n    const { latitude, longitude } = station.location;\n    stationsMap[station.id] = [longitude, latitude];\n  });\n  return {\n    type: 'FeatureCollection',\n    features: data.items[0].readings.map(reading => {\n      return {\n        type: 'Feature',\n        properties: {\n          reading: reading.value,\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: stationsMap[reading.station_id],\n        },\n      }\n    }),\n  };\n}\n\nconst HOST = 'https://api.checkweather.sg';\nconst sources = {\n  rain: HOST + '/now',\n  id: HOST + '/now-id',\n  observations: HOST + '/observations?compact=1',\n};\n\nconst $datetime = document.getElementById('datetime');\n\nconst $loader = document.getElementById('loader');\nmap.on('dataloading', (e) => {\n  $loader.hidden = false;\n  $datetime.hidden = true;\n});\nlet dataDone = null;\nmap.on('data', (e) => {\n  clearTimeout(dataDone);\n  dataDone = setTimeout(() => {\n    $loader.hidden = true;\n    $datetime.hidden = false;\n  }, 1000);\n});\n\nconst showRain = () => {\n  const rainSource = map.getSource('rainsource');\n  if (rainSource){\n    rainSource.setData(sources.rain);\n  } else {\n    map.addSource('rainsource', {\n      type: 'geojson',\n      data: sources.rain,\n    });\n\n    // 2D radar\n    map.addLayer({\n      id: 'rainlay',\n      type: 'fill',\n      source: 'rainsource',\n      paint: {\n        'fill-color': ['get', 'color'],\n        'fill-antialias': false,\n        // 'fill-outline-color': 'black',\n        'fill-opacity': [\n          'interpolate', ['linear'], ['zoom'],\n          8, ['max', .3, ['*', ['/', ['get', 'intensity'], 100], 1]],\n          14, ['max', .05, ['*', ['/', ['get', 'intensity'], 100], .3]]\n        ],\n      },\n    }, labelLayerId);\n\n    // 3D radar\n    map.addLayer({\n      id: 'rain3d',\n      type: 'fill-extrusion',\n      source: 'rainsource',\n      layout: {\n        visibility: 'none',\n      },\n      paint: {\n        'fill-extrusion-color': ['get', 'color'],\n        'fill-extrusion-opacity': [\n          'interpolate', ['linear'], ['zoom'],\n          8, .7,\n          14, .1\n        ],\n        'fill-extrusion-height': ['*', 50, ['get', 'intensity']],\n      },\n    }, labelLayerId);\n\n    // 3D clouds\n    map.addLayer({\n      id: 'rainclouds',\n      type: 'fill-extrusion',\n      source: 'rainsource',\n      layout: {\n        visibility: 'none',\n      },\n      paint: {\n        'fill-extrusion-color': '#fff',\n        'fill-extrusion-opacity': .8,\n        'fill-extrusion-height': ['+', 5200, ['*', 5, ['get', 'intensity']]],\n        'fill-extrusion-base': 5000,\n      },\n    });\n    map.loadImage(rainDrops, (e, image) => {\n      if (e) throw e;\n      map.addImage('rain', image);\n      map.addLayer({\n        id: 'raindrops',\n        type: 'fill-extrusion',\n        source: 'rainsource',\n        layout: {\n          visibility: 'none',\n        },\n        paint: {\n          'fill-extrusion-pattern': 'rain',\n          'fill-extrusion-height': 5000,\n          'fill-extrusion-opacity': [\n            'interpolate', ['linear'], ['zoom'],\n            12, .2,\n            14, .03\n          ],\n        },\n      }, 'rainclouds');\n      map.addLayer({\n        id: 'raincloudshadows',\n        type: 'fill',\n        source: 'rainsource',\n        layout: {\n          visibility: 'none',\n        },\n        paint: {\n          'fill-antialias': false,\n          'fill-opacity': [\n            'interpolate', ['linear'], ['zoom'],\n            8, .5,\n            14, ['*', ['/', ['get', 'intensity'], 100], .5]\n          ],\n        },\n      }, 'raindrops');\n    });\n\n    let currentPitch = -1;\n    map.on('pitchend', () => {\n      const pitch = map.getPitch();\n      if (pitch === currentPitch) return;\n      currentPitch = pitch;\n      if (cloudsMode) return;\n      map.setLayoutProperty('rain3d', 'visibility', pitch > 0 ? 'visible' : 'none');\n      map.setLayoutProperty('rainlay', 'visibility', pitch > 0 ? 'none' : 'visible');\n    });\n  }\n\n  setTimeout(() => {\n    fetch(sources.id).then((res) => res.text()).then((id) => {\n      const html = (id.match(/\\d{4}$/) || [''])[0].replace(/(\\d{2})(\\d{2})/, (m, m1, m2) => {\n        let h = parseInt(m1, 10);\n        const ampm = h >= 12 ? 'PM' : 'AM';\n        if (h == 0) h = 12;\n        if (h > 12) h -= 12;\n        return h + '<blink>:</blink>' + m2 + ' ' + ampm;\n      });\n      $datetime.innerHTML = html;\n    });\n  }, 1000);\n};\n\nconst showObservations = () => {\n  const observationsSource = map.getSource('observations');\n  if (observationsSource){\n    observationsSource.setData(sources.observations);\n  } else {\n    map.addSource('observations', {\n      type: 'geojson',\n      data: sources.observations,\n    });\n    map.addLayer({\n      id: 'tempreadings',\n      type: 'symbol',\n      source: 'observations',\n      filter: ['all', ['has', 'temp_celcius'], ['>', 'temp_celcius', 0]],\n      layout: {\n        'text-field': '{temp_celcius}°',\n        'text-allow-overlap': true,\n        'text-size': [\n          'interpolate', ['linear'], ['zoom'],\n          8, ['zoom'],\n          14, ['*', 1.5, ['zoom']]\n        ],\n        'text-padding': 1,\n      },\n      paint: {\n        'text-color': 'yellow',\n        'text-halo-color': '#000',\n        'text-halo-width': 1,\n      },\n    }, 'rainclouds');\n    map.addLayer({\n      id: 'humidreadings',\n      type: 'symbol',\n      source: 'observations',\n      minzoom: 10,\n      filter: ['all', ['has', 'relative_humidity'], ['>', 'relative_humidity', 0]],\n      layout: {\n        'text-field': '{relative_humidity}%',\n        'text-size': [\n          'interpolate', ['linear'], ['zoom'],\n          8, ['zoom'],\n          14, ['zoom']\n        ],\n        'text-offset': [0, -1.1],\n        'text-padding': 0,\n      },\n      paint: {\n        'text-color': 'orange',\n        'text-halo-color': '#000',\n        'text-halo-width': 1,\n      },\n    }, 'rainclouds');\n    map.addLayer({\n      id: 'rainreadings',\n      type: 'symbol',\n      source: 'observations',\n      minzoom: 12,\n      filter: ['all', ['has', 'rain_mm'], ['>', 'rain_mm', 0]],\n      layout: {\n        'text-field': '{rain_mm}',\n        'text-size': [\n          'interpolate', ['linear'], ['zoom'],\n          8, ['zoom'],\n          14, ['zoom']\n        ],\n        'text-offset': [0, 1.1],\n        'text-padding': 0,\n      },\n      paint: {\n        'text-color': 'aqua',\n        'text-halo-color': '#000',\n        'text-halo-width': 1,\n      },\n    }, 'rainclouds');\n    map.loadImage(arrowPath, (e, image) => {\n      if (e) return;\n      map.addImage('arrow', image, { sdf: true });\n      setTimeout(() => {\n        map.addLayer({\n          id: 'windirections',\n          type: 'symbol',\n          source: 'observations',\n          filter: ['has', 'wind_direction'],\n          layout: {\n            'icon-image': 'arrow',\n            'icon-rotate': ['get', 'wind_direction'],\n            'icon-allow-overlap': true,\n            'icon-ignore-placement': true,\n            'icon-pitch-alignment': 'map',\n            'icon-rotation-alignment': 'map',\n            'icon-size': [\n              'interpolate', ['linear'], ['zoom'],\n              8, .4,\n              14, 3\n            ],\n          },\n          paint: {\n            'icon-color': '#fff',\n            'icon-opacity': .2,\n          },\n        }, 'tempreadings');\n      }, 300);\n    });\n  }\n}\n\nconst rafInterval = (fn, delay) => {\n  let rafint;\n  const start = () => requestAnimationFrame(() => {\n    fn();\n    fnTimeout();\n  });\n  const stop = () => clearTimeout(rafint);\n  const fnTimeout = () => {\n    stop();\n    rafint = setTimeout(start, delay);\n  }\n  return {\n    start,\n    stop,\n  };\n};\n\nlet labelLayerId;\nmap.on('load', function(){\n  const layers = map.getStyle().layers;\n  // Find the index of the first symbol layer in the map style\n  for (let i=0; i<layers.length; i++){\n    if (layers[i].type === 'symbol' && layers[i].layout['text-field']){\n      labelLayerId = layers[i].id;\n      break;\n    }\n  }\n\n  // Mask the area outside Singapore\n  map.addLayer({\n    id: 'bbox',\n    type: 'fill',\n    source: {\n      type: 'geojson',\n      data: {\n        type: 'Feature',\n        properties: {},\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [-180, 90], [180, 90], [180, -90], [-180, -90], [-180, 90]\n          ], [\n            [lowerLong, upperLat],\n            [upperLong, upperLat],\n            [upperLong, lowerLat],\n            [lowerLong, lowerLat],\n            [lowerLong, upperLat]\n          ]],\n        },\n      },\n    },\n    paint: {\n      'fill-color': 'rgba(0,0,0,.5)',\n    },\n  }, labelLayerId);\n\n  rafInterval(showRain, 60 * 1000).start(); // every min\n  rafInterval(showObservations, 2 * 60 * 1000).start(); // every 2 mins\n});\n\n// https://stackoverflow.com/a/21829819/20838\n// http://w3c.github.io/deviceorientation/spec-source-orientation.html#worked-example\nconst degtorad = Math.PI / 180; // Degree-to-Radian conversion\nfunction compassHeading(alpha, beta, gamma){\n  var _x = beta  ? beta  * degtorad : 0; // beta value\n  var _y = gamma ? gamma * degtorad : 0; // gamma value\n  var _z = alpha ? alpha * degtorad : 0; // alpha value\n\n  var cX = Math.cos( _x );\n  var cY = Math.cos( _y );\n  var cZ = Math.cos( _z );\n  var sX = Math.sin( _x );\n  var sY = Math.sin( _y );\n  var sZ = Math.sin( _z );\n\n  // Calculate Vx and Vy components\n  var Vx = - cZ * sY - sZ * sX * cY;\n  var Vy = - sZ * sY + cZ * sX * cY;\n\n  // Calculate compass heading\n  var compassHeading = Math.atan( Vx / Vy );\n\n  // Convert compass heading to use whole unit circle\n  if( Vy < 0 ) {\n    compassHeading += Math.PI;\n  } else if( Vx < 0 ) {\n    compassHeading += 2 * Math.PI;\n  }\n\n  return compassHeading * ( 180 / Math.PI ); // Compass Heading (in degrees)\n}\n\nconst $windCompasss = document.getElementById('wind-compass');\nif (window.DeviceOrientationEvent){\n  // https://developers.google.com/web/updates/2016/03/device-orientation-changes\n  // https://stackoverflow.com/a/47870694/20838\n  var deviceorientation = 'ondeviceorientationabsolute' in window ? 'deviceorientationabsolute' : 'deviceorientation';\n  window.addEventListener(deviceorientation, function(e){\n    if (!e || e.alpha === null) return;\n    const heading = e.compassHeading || e.webkitCompassHeading || compassHeading(e.alpha, e.beta, e.gamma);\n    $windCompasss.classList.add('compassing');\n    $windCompasss.style.transform = `rotate(${heading-180}deg)`;\n  }, false);\n}"]}