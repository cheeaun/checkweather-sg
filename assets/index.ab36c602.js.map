{"version":3,"file":"index.ab36c602.js","sources":["../../vite/modulepreload-polyfill","../../utils/chaikin.js","../../preact/jsx-runtime","../../app.jsx","../../assets/arrow-down-white.png","../../icons/icon-standalone.svg"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","// 1. https://observablehq.com/@dvreed77/chaikin\n// 2. https://www.npmjs.com/package/chaikin\nfunction cut(start, end, ratio) {\n  const r1 = [\n    start[0] * (1 - ratio) + end[0] * ratio,\n    start[1] * (1 - ratio) + end[1] * ratio,\n  ];\n  const r2 = [\n    start[0] * ratio + end[0] * (1 - ratio),\n    start[1] * ratio + end[1] * (1 - ratio),\n  ];\n  return [r1, r2];\n}\nfunction chaikin(pts, iterations = 1, closed = true, ratio = 0.25) {\n  if (iterations > 10) iterations = 10;\n  if (iterations == 0) return pts;\n\n  if (closed) {\n    const nCorners = pts.length;\n\n    const newPts = [];\n    for (let i = 0; i < nCorners; i++) {\n      const ptA = pts[i];\n      const ptB = pts[(i + 1) % nCorners];\n\n      const [newPtA, newPtB] = cut(ptA, ptB, ratio);\n\n      newPts.push(newPtA, newPtB);\n    }\n\n    return chaikin(newPts, iterations - 1, closed, ratio);\n  } else {\n    if (ratio > 0.5) {\n      ratio = 1 - ratio;\n    }\n\n    for (let i = 0; i < iterations; i++) {\n      let refined = [];\n      refined.push(pts[0]);\n\n      for (let j = 1; j < pts.length; j++) {\n        let points = cut(pts[j - 1], pts[j], ratio);\n        refined = refined.concat(points);\n      }\n\n      if (closed) {\n        refined = refined.concat(cut(pts[pts.length - 1], pts[0], ratio));\n      } else {\n        refined.push(pts[pts.length - 1]);\n      }\n\n      pts = refined;\n    }\n    return pts;\n  }\n}\n\nexport default chaikin;\n","import * as jsxRuntime from \"/home/runner/work/checkweather-sg/checkweather-sg/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import { render } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport useInterval from 'react-use/lib/useInterval';\nimport useRafState from 'react-use/lib/useRafState';\nimport maplibregl from 'maplibre-gl';\nimport { contours } from 'd3-contour';\nimport nanomemoize from 'nano-memoize';\nimport { featureCollection, point, polygon, round } from '@turf/helpers';\n\nconst { VITE_MAPTILER_KEY: MAPTILER_KEY } = import.meta.env;\n\nimport { initializeApp } from 'firebase/app';\nimport {\n  getFirestore,\n  query,\n  collection,\n  orderBy,\n  limit,\n  onSnapshot,\n} from 'firebase/firestore';\n\nimport arrowPath from './assets/arrow-down-white.png';\nimport iconSVGPath from './icons/icon-standalone.svg';\n\nimport chaikin from './utils/chaikin';\n\n// const TESTING_MODE = location.hash === '#test-mode';\n// import testSnapshot from './utils/testSnapshot';\n\n// Initialize Firebase\nconst firebaseApp = initializeApp({\n  projectId: 'check-weather-sg',\n});\nconst db = getFirestore(firebaseApp);\n\nconst width = 217,\n  height = 120;\nconst center = [103.8475, 1.3011];\nconst lowerLat = 1.156,\n  upperLat = 1.475,\n  lowerLong = 103.565,\n  upperLong = 104.13;\nconst distanceLong = Math.abs(upperLong - lowerLong);\nconst distanceLat = Math.abs(upperLat - lowerLat);\n\nconst bboxGeoJSON = polygon([\n  [\n    [-180, 90],\n    [180, 90],\n    [180, -90],\n    [-180, -90],\n    [-180, 90],\n  ],\n  [\n    [lowerLong, upperLat],\n    [upperLong, upperLat],\n    [upperLong, lowerLat],\n    [lowerLong, lowerLat],\n    [lowerLong, upperLat],\n  ],\n]);\n\nconst intensityColors = [\n  '#40FFFD',\n  '#3BEEEC',\n  '#32D0D2',\n  '#2CB9BD',\n  '#229698',\n  '#1C827D',\n  '#1B8742',\n  '#229F44',\n  '#27B240',\n  '#2CC53B',\n  '#30D43E',\n  '#38EF46',\n  '#3BFB49',\n  '#59FA61',\n  '#FEFB63',\n  '#FDFA53',\n  '#FDEB50',\n  '#FDD74A',\n  '#FCC344',\n  '#FAB03F',\n  '#FAA23D',\n  '#FB8938',\n  '#FB7133',\n  '#F94C2D',\n  '#F9282A',\n  '#DD1423',\n  '#BE0F1D',\n  '#B21867',\n  '#D028A6',\n  '#F93DF5',\n];\nconst intensityColorsCount = intensityColors.length;\n\nconst sgPolygon = {\n  type: 'Polygon',\n  coordinates: [\n    [\n      [103.56983184814452, 1.1984523335134731],\n      [103.71986389160156, 1.1459349466540576],\n      [104.13459777832031, 1.2763684180848154],\n      [104.0789794921875, 1.3580576343735706],\n      [104.09442901611328, 1.3913503559342686],\n      [104.08344268798828, 1.4260154737416286],\n      [104.04155731201172, 1.4462651532861726],\n      [103.97151947021484, 1.4229265238497912],\n      [103.9368438720703, 1.4304772829308758],\n      [103.89667510986328, 1.4263586901405338],\n      [103.86817932128906, 1.4555318956783565],\n      [103.81153106689452, 1.4788701887242242],\n      [103.75968933105469, 1.4469515799492016],\n      [103.72535705566406, 1.4596504356431457],\n      [103.67523193359375, 1.4308204986633148],\n      [103.65943908691406, 1.4067952740787528],\n      [103.61721038818358, 1.323391529857783],\n      [103.56983184814452, 1.1984523335134731],\n    ],\n  ],\n};\n\nif (window.$map) window.$map.remove();\n\nconst bounds = [lowerLong, lowerLat, upperLong, upperLat];\nconst fitBoundsOptions = () => ({\n  padding: window.innerWidth > 640 && window.innerHeight > 640 ? 120 : 0,\n});\nconst maxZoom = 14;\nconst map = (window.$map = new maplibregl.Map({\n  container: 'map',\n  center,\n  // style: 'mapbox://styles/mapbox/dark-v10?optimize=true',\n  // style: 'mapbox://styles/cheeaun/ck7rpspsa2mwh1imt7s5ual7l',\n  style: `https://api.maptiler.com/maps/aecd4cb7-a35b-4c10-89aa-0f4bd52ed1cb/style.json?key=${MAPTILER_KEY}`,\n  minZoom: 8,\n  maxZoom,\n  renderWorldCopies: false,\n  boxZoom: false,\n  pitchWithRotate: false,\n  dragRotate: false,\n  touchPitch: false,\n  attributionControl: false,\n  bounds,\n  fitBoundsOptions: fitBoundsOptions(),\n}));\nmap.touchZoomRotate.disableRotation();\n\n// Controls\nmap.addControl(\n  new maplibregl.NavigationControl({\n    showCompass: false,\n  }),\n  'top-right',\n);\nmap.addControl(\n  new maplibregl.GeolocateControl({\n    trackUserLocation: true,\n  }),\n  'top-right',\n);\n\nclass SnapBoundaryControl {\n  onAdd(map) {\n    this._map = map;\n    this._container = document.createElement('div');\n    this._container.className = 'maplibregl-ctrl maplibregl-ctrl-group';\n\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.title = 'Snap to boundary';\n    button.innerHTML =\n      '<svg height=\"100%\" width=\"100%\" viewBox=\"0 0 24 24\" fill=\"#333\"><path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm-7 7H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4z\"/></svg>';\n    button.onclick = (e) => {\n      e.preventDefault();\n      this._container.hidden = true;\n      map.fitBounds(bounds, fitBoundsOptions(), { snap: true });\n    };\n    this._container.appendChild(button);\n\n    this._container.hidden = true;\n    map.on('moveend', (e) => {\n      if (e.snap) return;\n      this._container.hidden = false;\n    });\n\n    return this._container;\n  }\n  onRemove() {\n    this._container.parentNode.removeChild(this._container);\n    this._map = undefined;\n  }\n}\nmap.addControl(new SnapBoundaryControl(), 'top-right');\n\nconst $loader = document.getElementById('loader');\nmap.on('dataloading', (e) => {\n  $loader.hidden = false;\n});\nlet dataDone = null;\nmap.on('data', (e) => {\n  clearTimeout(dataDone);\n  dataDone = setTimeout(() => {\n    $loader.hidden = true;\n  }, 500);\n});\n\nconst $legend = document.getElementById('legend');\nconst $infoButton = document.getElementById('info-button');\nconst $legendClose = document.getElementById('legend-close');\n$infoButton.onclick = (e) => {\n  e.preventDefault();\n  $legend.hidden = !$legend.hidden;\n};\n$legendClose.onclick = (e) => {\n  e.preventDefault();\n  $legend.hidden = true;\n};\n\nconst convertRainID2Time = nanomemoize((id) => {\n  const time = (id.match(/\\d{4}$/) || [''])[0].replace(\n    /(\\d{2})(\\d{2})/,\n    (m, m1, m2) => {\n      let h = parseInt(m1, 10);\n      const ampm = h >= 12 ? 'PM' : 'AM';\n      if (h == 0) h = 12;\n      if (h > 12) h -= 12;\n      return h + ':' + m2 + ' ' + ampm;\n    },\n  );\n  return time;\n});\n\nconst convertX2Lng = nanomemoize((x) =>\n  round(lowerLong + (x / width) * distanceLong, 4),\n);\nconst convertY2Lat = nanomemoize((y) =>\n  round(upperLat - (y / height) * distanceLat, 4),\n);\n\nconst zerosArray = new Array(width * height).fill(0);\nconst convertRadar2Values = nanomemoize(\n  (id, radar) => {\n    const rows = radar.trimEnd().split(/\\n/g);\n    const values = zerosArray.slice();\n    for (let y = 0, l = rows.length; y < l; y++) {\n      const chars = rows[y];\n      for (let x = chars.search(/[^\\s]/), rl = chars.length; x < rl; x++) {\n        const char = chars[x];\n        if (char && char !== ' ') {\n          const intensity = char.charCodeAt() - 33;\n          values[y * width + x] = intensity;\n        }\n      }\n    }\n    return values;\n  },\n  {\n    maxArgs: 1,\n  },\n);\n\n// console.log({ intensityColors });\nconst contour = contours()\n  .size([width, height])\n  // .thresholds(\n  //   intensityColors.map((_, i) => Math.ceil((i / intensityColorsCount) * 100)),\n  //   // .filter((_, i) => i % 2 !== 0),\n  // )\n  .thresholds([4, 10, 20, 30, 40, 50, 60, 70, 80, 85, 90, 95, 97.5])\n  .smooth(false);\nconst convertValues2GeoJSON = nanomemoize(\n  (id, values) => {\n    const results = [];\n    const conValues = contour(values);\n    for (let i = 0, l = conValues.length; i < l; i++) {\n      const { type, value, coordinates } = conValues[i];\n      if (coordinates.length) {\n        results.push({\n          type: 'Feature',\n          properties: { intensity: value, id },\n          geometry: {\n            type,\n            coordinates: coordinates.map((c1) =>\n              c1.map((c2) => {\n                c2.pop(); // Remove last coord\n                return chaikin(c2).map(([x, y]) => [\n                  convertX2Lng(x),\n                  convertY2Lat(y),\n                ]);\n              }),\n            ),\n          },\n        });\n      }\n    }\n    return results;\n  },\n  {\n    maxArgs: 1,\n  },\n);\n\nconst genMidValues = nanomemoize(\n  (id, values1, values2) => {\n    const midValues = [];\n    for (let i = 0, l = values1.length; i < l; i++) {\n      midValues[i] = (values1[i] + values2[i]) / 2;\n    }\n    return midValues;\n  },\n  {\n    maxArgs: 1,\n  },\n);\n\nconst showObservations = () => {\n  fetch('https://api.checkweather.sg/v2/observations')\n    .then((res) => res.json())\n    .then((data) => {\n      // console.log('observations', data);\n      const points = data.map((d) => {\n        const { id, lng, lat, ...props } = d;\n        return point([lng, lat], props, { id });\n      });\n      const pointsCollection = featureCollection(points);\n      map.getSource('observations').setData(pointsCollection);\n    });\n};\n\nconst rafInterval = (fn, delay, immediate = false) => {\n  if (immediate) fn();\n  setTimeout(requestAnimationFrame, delay, () => {\n    fn();\n    rafInterval(fn, delay);\n  });\n};\n\nconst ClipPathSparkline = ({\n  values = [],\n  maxValue = null,\n  smoothIterations = 1,\n  style = {},\n  ...props\n}) => {\n  if (!values.length) return null;\n  const total = values.length - 1;\n  const max = maxValue || Math.max(...values);\n  let path = '';\n  chaikin(\n    values.map((v, i) => {\n      const x = Math.round((i / total) * 100);\n      const y = Math.round((v / max) * 100);\n      return [x, y];\n    }),\n    smoothIterations,\n    false,\n  ).forEach((p, i) => {\n    if (i > 0) path += ',';\n    path += `${p[0]}% ${100 - p[1]}%`;\n  });\n  return (\n    <div\n      {...props}\n      style={{\n        ...style,\n        clipPath: `polygon(0 100%, ${path}, 100% 100%)`,\n      }}\n    />\n  );\n};\n\nconst testRadar = () => {\n  let test = '';\n  for (let i = 0; i < height; i++) {\n    for (let j = 0; j < width; j++) {\n      const intensity = ~~Math.round((j / width) * 100);\n      const c = String.fromCharCode(intensity + 33);\n      test += c;\n    }\n    test += '\\n';\n  }\n  return test;\n};\n\nfunction debounce(fn, wait = 1) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn.call(this, ...args), wait);\n  };\n}\n\nconst styleDataLoaded = new Promise((res) => {\n  map.once('styledata', res);\n});\n\nconst RAINAREA_COUNT = 25;\nconst weatherDB = query(\n  collection(db, 'weather'),\n  orderBy('id', 'desc'),\n  limit(RAINAREA_COUNT),\n);\n\nlet firstLoad = true;\nlet memorySaverMode = false;\nconst Player = () => {\n  const [loading, setLoading] = useState(false);\n  const [index, setIndex] = useRafState(null);\n  const [snapshots, setSnapshots] = useRafState([]);\n  const [playing, setPlaying] = useState(false);\n  const [fwd, setFwd] = useState(false);\n  const [docHidden, setDocHidden] = useState(document.hidden);\n\n  useEffect(() => {\n    document.addEventListener(\n      'visibilitychange',\n      () => {\n        setDocHidden(document.hidden);\n      },\n      false,\n    );\n  }, []);\n\n  const debouncedOnSnapshot = debounce((s) => {\n    // if (TESTING_MODE) s = testSnapshot();\n    if (firstLoad) console.timeEnd('Fetch Snapshots');\n    setLoading(false);\n\n    // memorySaverMode = s.docs.every(\n    //   (d) => d.data().coverage_percentage.all > 90,\n    // );\n    const averageCoverage =\n      s.docs\n        .map((d) => d.data().coverage_percentage.all)\n        .reduce((a, b) => a + b) / s.docs.length;\n    // console.log(averageCoverage);\n    memorySaverMode = averageCoverage > 50;\n\n    const processSnapshots = () => {\n      console.time('Process Snapshots');\n      const shots = [];\n      const geoJSONList = [];\n\n      const docs = s.docs.reverse();\n      docs.forEach((doc, i) => {\n        const rainarea = doc.data();\n        const values = convertRadar2Values(rainarea.id, rainarea.radar);\n        const geojsons = convertValues2GeoJSON(rainarea.id, values);\n        geoJSONList.push(...geojsons);\n\n        const nextDoc = docs[i + 1];\n        if (nextDoc && !memorySaverMode) {\n          const nextRainArea = nextDoc.data();\n          const nextValues = convertRadar2Values(\n            nextRainArea.id,\n            nextRainArea.radar,\n          );\n          const midID = `${\n            (Number(rainarea.id) + Number(nextRainArea.id)) / 2\n          }`;\n          const midValues = genMidValues(midID, values, nextValues);\n          const nextGeojsons = convertValues2GeoJSON(midID, midValues);\n          geoJSONList.push(...nextGeojsons);\n        }\n\n        shots.push(rainarea);\n      });\n\n      const collection = featureCollection(geoJSONList);\n      styleDataLoaded.then(() => {\n        if (!map.getFilter('rainradar')) {\n          map.setFilter('rainradar', ['==', 'id', s.docs[0].data().id], {\n            validate: false,\n          });\n        }\n        map.getSource('rainradar').setData(collection);\n        if (!index) setIndex(shots.length);\n        setSnapshots(shots);\n      });\n      console.timeEnd('Process Snapshots');\n    };\n\n    if (firstLoad) {\n      const firstDoc = s.docs[0].data();\n      // const radar = testRadar();\n      const values = convertRadar2Values(firstDoc.id, firstDoc.radar);\n      const geojsons = convertValues2GeoJSON(firstDoc.id, values);\n      styleDataLoaded.then(() => {\n        map.getSource('rainradar').setData(featureCollection(geojsons));\n        firstLoad = false;\n        map.once('idle', () => requestAnimationFrame(processSnapshots));\n      });\n    } else {\n      processSnapshots();\n    }\n  }, 300);\n\n  useEffect(() => {\n    let unsub = () => {};\n    if (docHidden) {\n      setPlaying(false);\n      firstLoad = false;\n    } else {\n      console.log('Start Snapshots');\n      console.time('Fetch Snapshots');\n      setLoading(true);\n      unsub = onSnapshot(weatherDB, debouncedOnSnapshot);\n    }\n    return () => unsub();\n  }, [docHidden]);\n\n  const snapshotsCount = snapshots.length;\n  if (snapshotsCount <= 1) return null;\n\n  useEffect(() => {\n    if (index && snapshotsCount) {\n      const roundIndex = Math.round(index);\n      const floatIndex = Math.round(index / 0.5) * 0.5;\n\n      const shot = snapshots[roundIndex - 1];\n      let id = shot.id;\n\n      if (floatIndex !== roundIndex && !memorySaverMode) {\n        const floorSnapshot = snapshots[Math.floor(floatIndex) - 1];\n        const ceilSnapshot = snapshots[Math.ceil(floatIndex) - 1];\n        if (floorSnapshot && ceilSnapshot) {\n          const midID = `${(floorSnapshot.dt + ceilSnapshot.dt) / 2}`;\n          id = midID;\n        }\n      }\n\n      setFwd(false);\n      map.setFilter('rainradar', ['==', 'id', id], {\n        validate: false,\n      });\n\n      const faded = index < snapshotsCount - 1;\n      map.setPaintProperty('tempreadings', 'text-opacity', faded ? 0.3 : 1);\n      map.setPaintProperty('humidreadings', 'text-opacity', faded ? 0.3 : 1);\n      map.setPaintProperty('rainreadings', 'text-opacity', faded ? 0.3 : 1);\n      map.setPaintProperty('windirections', 'icon-opacity', faded ? 0.1 : 0.3);\n    }\n  }, [index, snapshots]);\n\n  useEffect(() => {\n    if (index < snapshotsCount && !playing) {\n      setFwd(true);\n    }\n  }, [snapshots]);\n\n  const { id } = snapshots[Math.round(index) - 1];\n  const sgCoveragePercentages = snapshots.map((s) => s.coverage_percentage.sg);\n  const maxSGCoveragePercentage = Math.max(...sgCoveragePercentages);\n\n  useInterval(\n    () => {\n      const endOfSnapshots = index >= snapshotsCount;\n      if (endOfSnapshots && maxSGCoveragePercentage < 5) {\n        setPlaying(false);\n      } else {\n        setIndex(endOfSnapshots ? 1 : index + 0.5);\n      }\n    },\n    playing ? (index === snapshotsCount ? 2000 : 100) : null,\n  );\n\n  const indexPercentage = ((index - 1) / (snapshotsCount - 1)) * 100;\n  const sparklineHeight = 40;\n  const playIconSize = Math.max((maxSGCoveragePercentage / 100) * 24, 16);\n\n  return (\n    <div id=\"player-content\" class={loading ? 'loading' : ''}>\n      <div\n        id=\"player-button\"\n        class={playing ? 'playing' : ''}\n        onClick={() => {\n          if (fwd) {\n            setIndex(snapshotsCount);\n            return;\n          }\n          if (index === snapshotsCount && !playing) setIndex(1);\n          setPlaying(!playing);\n        }}\n      >\n        <div id=\"player-icon\">\n          <svg width={playIconSize} height={playIconSize} viewBox=\"0 0 24 24\">\n            <path\n              d={\n                fwd\n                  ? 'M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z'\n                  : playing\n                  ? 'M6 19h4V5H6v14zm8-14v14h4V5h-4z'\n                  : 'M8 5v14l11-7z'\n              }\n            />\n          </svg>\n        </div>\n      </div>\n      <div id=\"player-range\">\n        <div\n          id=\"player-time\"\n          class={index === snapshotsCount ? 'now' : ''}\n          style={{\n            left: `${indexPercentage}%`,\n            transform: `translateX(-${indexPercentage}%)`,\n          }}\n        >\n          {convertRainID2Time(id)}\n        </div>\n        <ClipPathSparkline\n          values={sgCoveragePercentages}\n          maxValue={100}\n          smoothIterations={2}\n          style={{ height: sparklineHeight }}\n          id=\"player-sparkline\"\n        />\n        <progress value={index} max={snapshotsCount} />\n        <div id=\"player-labels\">\n          <span>{convertRainID2Time(snapshots[0].id)}</span>\n          <span>\n            {convertRainID2Time(\n              snapshots[Math.round(snapshotsCount / 2) - 1].id,\n            )}\n          </span>\n          <span>{convertRainID2Time(snapshots[snapshotsCount - 1].id)}</span>\n        </div>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max={snapshotsCount}\n          step=\"any\"\n          value={index}\n          onInput={(e) => {\n            setPlaying(false);\n            setIndex(e.target.value);\n          }}\n          onMouseUp={() => setIndex(Math.round(index))}\n          onTouchEnd={(e) => {\n            setIndex(Math.round(index));\n            const touch = e.changedTouches[0];\n            if (touch) {\n              const { width, x } = touch.target.getBoundingClientRect();\n              const padding = 8;\n              const actualWidth = width - padding * 2;\n              const index =\n                ((touch.clientX - padding - x) / actualWidth) *\n                  (snapshotsCount - 1) +\n                1;\n              setIndex(\n                Math.max(1, Math.min(snapshotsCount, Math.round(index))),\n              );\n            }\n          }}\n          onTouchCancel={() => setIndex(Math.round(index))}\n        />\n      </div>\n    </div>\n  );\n};\nrender(<Player />, document.getElementById('player'));\n\n(async () => {\n  await styleDataLoaded;\n\n  // Add sources\n  map.addSource('observations', {\n    type: 'geojson',\n    data: {\n      type: 'FeatureCollection',\n      features: [],\n    },\n    tolerance: 5,\n    buffer: 0,\n    maxzoom: maxZoom,\n  });\n  map.addSource('rainradar', {\n    type: 'geojson',\n    data: {\n      type: 'FeatureCollection',\n      features: [],\n    },\n    maxzoom: maxZoom,\n    // tolerance: 0.5,\n    // buffer: screen.width > 1280 ? 128 : 0,\n  });\n\n  const layers = map.getStyle().layers;\n  // console.log({ layers });\n\n  let labelLayerId;\n  for (let i = 0; i < layers.length; i++) {\n    const { id, type, layout } = layers[i];\n    if (type === 'symbol' && layout['text-field']) {\n      // Find the index of the first symbol layer in the map style\n      if (!labelLayerId) {\n        labelLayerId = layers[i].id;\n      }\n    }\n\n    // Fade out all other labels\n    if (type === 'symbol') {\n      const textOpacity = map.getPaintProperty(id, 'text-opacity');\n      map.setPaintProperty(id, 'text-opacity', [\n        'case',\n        ['within', sgPolygon],\n        textOpacity || 1,\n        0,\n      ]);\n      const iconOpacity = map.getPaintProperty(id, 'icon-opacity');\n      if (typeof iconOpacity === 'number') {\n        map.setPaintProperty(id, 'icon-opacity', [\n          'case',\n          ['within', sgPolygon],\n          iconOpacity || 1,\n          0,\n        ]);\n      }\n    }\n  }\n\n  const radarColors = intensityColors.reduce((acc, color, i) => {\n    const intensity = ((i + 1) / intensityColorsCount) * 100;\n    acc.push(intensity, color);\n    return acc;\n  }, []);\n  const radarFillColor = [\n    'interpolate-lab',\n    ['linear'],\n    ['number', ['get', 'intensity'], 0],\n    0,\n    'transparent',\n    ...radarColors,\n  ];\n\n  // Using fill-extrusion here because\n  // https://github.com/mapbox/mapbox-gl-js/issues/4090#issuecomment-1054711990\n  // Tiles overlap and the opacity overlaps\n  const waterOverlayColor = '#070707';\n  const waterOverlayOpacity = 0.6;\n  const waterPaint = {\n    'fill-extrusion-color': waterOverlayColor,\n    'fill-extrusion-opacity': waterOverlayOpacity,\n    'fill-extrusion-base': 100,\n    'fill-extrusion-height': 101,\n    'fill-extrusion-vertical-gradient': false,\n  };\n  map.addLayer(\n    {\n      id: 'water-overlay',\n      type: 'fill-extrusion',\n      source: 'openmaptiles',\n      'source-layer': 'water',\n      paint: waterPaint,\n    },\n    labelLayerId,\n  );\n\n  map.addLayer(\n    {\n      id: 'rainradar',\n      type: 'fill-extrusion',\n      source: 'rainradar',\n      paint: {\n        'fill-extrusion-vertical-gradient': false,\n        'fill-extrusion-height': ['number', ['get', 'intensity'], 0],\n        'fill-extrusion-color': radarFillColor,\n        'fill-extrusion-opacity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          8,\n          1,\n          12,\n          0.15,\n        ],\n      },\n    },\n    'water-overlay',\n  );\n\n  // map.addLayer(\n  //   {\n  //     id: 'rainradar',\n  //     type: 'fill',\n  //     source: 'rainradar',\n  //     layout: {\n  //       'fill-sort-key': ['number', ['get', 'intensity'], 0],\n  //     },\n  //     paint: {\n  //       'fill-antialias': false,\n  //       'fill-color': radarFillColor,\n  //       'fill-opacity': [\n  //         'interpolate',\n  //         ['linear'],\n  //         ['zoom'],\n  //         8,\n  //         ['case', ['>', ['number', ['get', 'intensity'], 0], 90], 1, 0.4],\n  //         12,\n  //         0.05,\n  //       ],\n  //     },\n  //   },\n  //   'water-overlay',\n  // );\n\n  map.addLayer({\n    id: 'tempreadings',\n    type: 'symbol',\n    source: 'observations',\n    minzoom: 8.5,\n    filter: ['all', ['has', 'temp_celcius'], ['>', 'temp_celcius', 0]],\n    layout: {\n      'text-field': '{temp_celcius}°',\n      'text-allow-overlap': true,\n      'text-ignore-placement': true,\n      'text-size': ['interpolate', ['linear'], ['zoom'], 8, 10, 14, 28],\n      'text-padding': 1,\n      'text-font': ['Noto Sans Regular'],\n    },\n    paint: {\n      'text-color': 'yellow',\n      'text-halo-color': '#000',\n      'text-halo-width': 1.5,\n    },\n  });\n\n  map.loadImage(arrowPath, (e, image) => {\n    map.addImage('arrow', image);\n  });\n  map.addLayer(\n    {\n      id: 'windirections',\n      type: 'symbol',\n      source: 'observations',\n      filter: ['has', 'wind_direction'],\n      layout: {\n        'icon-image': 'arrow',\n        'icon-rotate': ['get', 'wind_direction'],\n        'icon-allow-overlap': true,\n        'icon-ignore-placement': true,\n        'icon-size': ['interpolate', ['linear'], ['zoom'], 8, 0.05, 14, 0.6],\n      },\n      paint: {\n        'icon-opacity': 0.3,\n      },\n    },\n    'tempreadings',\n  );\n\n  map.addLayer({\n    id: 'humidreadings',\n    type: 'symbol',\n    source: 'observations',\n    minzoom: 10,\n    filter: [\n      'all',\n      ['has', 'relative_humidity'],\n      ['>', 'relative_humidity', 0],\n    ],\n    layout: {\n      'text-field': '{relative_humidity}%',\n      'text-ignore-placement': true,\n      'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 14, 14 * 1.1],\n      'text-offset': [0, -1.2],\n      'text-padding': 0,\n      'text-font': ['Noto Sans Regular'],\n    },\n    paint: {\n      'text-color': 'orange',\n      'text-halo-color': '#000',\n      'text-halo-width': 1.5,\n    },\n  });\n\n  map.addLayer({\n    id: 'rainreadings',\n    type: 'symbol',\n    source: 'observations',\n    minzoom: 12,\n    filter: ['all', ['has', 'rain_mm'], ['>', 'rain_mm', 0]],\n    layout: {\n      'text-field': '{rain_mm}mm',\n      'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 14, 14 * 1.1],\n      'text-ignore-placement': true,\n      'text-offset': [0, 1.2],\n      'text-padding': 0,\n      'text-font': ['Noto Sans Regular'],\n    },\n    paint: {\n      'text-color': 'aqua',\n      'text-halo-color': '#000',\n      'text-halo-width': 1.5,\n    },\n  });\n\n  rafInterval(showObservations, 2 * 60 * 1000, true); // every 2 mins\n\n  // Mask the area outside Singapore\n  map.addLayer(\n    {\n      id: 'bbox',\n      type: 'fill',\n      source: {\n        type: 'geojson',\n        tolerance: 10,\n        buffer: 0,\n        data: bboxGeoJSON,\n        maxzoom: maxZoom,\n      },\n      paint: {\n        'fill-color': 'rgba(0,0,0,.5)',\n        'fill-antialias': false,\n      },\n    },\n    labelLayerId,\n  );\n})();\n\nconst isSafari = navigator.vendor && navigator.vendor.indexOf('Apple') !== -1;\nif (isSafari) {\n  setTimeout(function () {\n    const ratio = window.devicePixelRatio;\n    const canvas = document.createElement('canvas');\n    const w = (canvas.width = window.screen.width * ratio);\n    const h = (canvas.height = window.screen.height * ratio);\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = '#343332';\n    ctx.fillRect(0, 0, w, h);\n    const icon = new Image();\n    icon.onload = () => {\n      const aspectRatio = icon.width / icon.height;\n      icon.width = w / 2;\n      icon.height = w / 2 / aspectRatio;\n      ctx.drawImage(\n        icon,\n        (w - icon.width) / 2,\n        (h - icon.height) / 2,\n        icon.width,\n        icon.height,\n      );\n      document.head.insertAdjacentHTML(\n        'beforeend',\n        `<link rel=\"apple-touch-startup-image\" href=\"${canvas.toDataURL()}\">`,\n      );\n    };\n    icon.src = iconSVGPath;\n  }, 5000);\n}\n","export default \"__VITE_ASSET__a77103cb__\"","export default \"__VITE_ASSET__05748528__\""],"names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","p","start","end","ratio","chaikin","pts","iterations","closed","nCorners","length","newPts","i","ptA","ptB","newPtA","newPtB","cut","push","refined","j","points","concat","jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","VITE_MAPTILER_KEY","MAPTILER_KEY","import","db","getFirestore","initializeApp","projectId","distanceLong","Math","abs","distanceLat","bboxGeoJSON","polygon","intensityColors","intensityColorsCount","sgPolygon","coordinates","window","$map","remove","bounds","fitBoundsOptions","padding","innerWidth","innerHeight","map","maplibregl","Map","container","center","style","minZoom","maxZoom","renderWorldCopies","boxZoom","pitchWithRotate","dragRotate","touchPitch","attributionControl","touchZoomRotate","disableRotation","addControl","NavigationControl","showCompass","GeolocateControl","trackUserLocation","onAdd","_map","_container","this","className","button","title","innerHTML","onclick","e","preventDefault","hidden","fitBounds","snap","appendChild","on","onRemove","parentNode","removeChild","undefined","$loader","getElementById","dataDone","clearTimeout","setTimeout","$legend","$infoButton","$legendClose","convertRainID2Time","nanomemoize","id","match","replace","m","m1","m2","h","parseInt","ampm","convertX2Lng","round","x","convertY2Lat","y","zerosArray","Array","width","fill","convertRadar2Values","radar","rows","trimEnd","split","values","slice","l","chars","search","rl","char","intensity","charCodeAt","maxArgs","contour","contours","size","thresholds","smooth","convertValues2GeoJSON","results","conValues","value","properties","geometry","c1","c2","pop","genMidValues","values1","values2","midValues","showObservations","then","res","json","data","d","lng","lat","props","point","pointsCollection","featureCollection","getSource","setData","rafInterval","fn","delay","immediate","requestAnimationFrame","ClipPathSparkline","_a","maxValue","smoothIterations","_b","total","max","path","_jsx","v","forEach","__spreadProps","clipPath","styleDataLoaded","Promise","once","weatherDB","query","collection","orderBy","limit","firstLoad","memorySaverMode","render","loading","setLoading","useState","index","setIndex","useRafState","snapshots","setSnapshots","playing","setPlaying","fwd","setFwd","docHidden","setDocHidden","useEffect","addEventListener","debouncedOnSnapshot","wait","timeout","args","call","debounce","s","console","timeEnd","averageCoverage","docs","coverage_percentage","all","reduce","a","b","processSnapshots","time","shots","geoJSONList","reverse","doc","rainarea","geojsons","nextDoc","nextRainArea","nextValues","midID","Number","nextGeojsons","getFilter","setFilter","validate","firstDoc","unsub","log","onSnapshot","snapshotsCount","roundIndex","floatIndex","floorSnapshot","floor","ceilSnapshot","ceil","dt","faded","setPaintProperty","sgCoveragePercentages","sg","maxSGCoveragePercentage","useInterval","endOfSnapshots","indexPercentage","playIconSize","_jsxs","class","children","onClick","height","viewBox","left","transform","min","step","onInput","target","onMouseUp","onTouchEnd","touch","changedTouches","getBoundingClientRect","actualWidth","clientX","onTouchCancel","addSource","features","tolerance","buffer","maxzoom","layers","getStyle","labelLayerId","layout","textOpacity","getPaintProperty","iconOpacity","radarFillColor","acc","color","waterPaint","addLayer","source","paint","minzoom","filter","loadImage","image","addImage","navigator","vendor","indexOf","devicePixelRatio","canvas","w","screen","ctx","getContext","fillStyle","fillRect","icon","Image","onload","aspectRatio","drawImage","head","insertAdjacentHTML","toDataURL","src"],"mappings":"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"}