{"version":3,"file":"index-CpGrdRRJ.js","sources":["../../assets/arrow-down-white.png","../../utils/chaikin.js","../../app.jsx","../../assets/fire-outline-black.png","../../icons/icon-standalone.svg"],"sourcesContent":["export default \"__VITE_ASSET__B0_AH_LF__\"","// 1. https://observablehq.com/@dvreed77/chaikin\n// 2. https://www.npmjs.com/package/chaikin\nfunction cut(start, end, ratio) {\n  const r1 = [\n    start[0] * (1 - ratio) + end[0] * ratio,\n    start[1] * (1 - ratio) + end[1] * ratio,\n  ];\n  const r2 = [\n    start[0] * ratio + end[0] * (1 - ratio),\n    start[1] * ratio + end[1] * (1 - ratio),\n  ];\n  return [r1, r2];\n}\nfunction chaikin(pts, iterations = 1, closed = true, ratio = 0.25) {\n  if (iterations > 10) iterations = 10;\n  if (iterations == 0) return pts;\n\n  if (closed) {\n    const nCorners = pts.length;\n\n    const newPts = [];\n    for (let i = 0; i < nCorners; i++) {\n      const ptA = pts[i];\n      const ptB = pts[(i + 1) % nCorners];\n\n      const [newPtA, newPtB] = cut(ptA, ptB, ratio);\n\n      newPts.push(newPtA, newPtB);\n    }\n\n    return chaikin(newPts, iterations - 1, closed, ratio);\n  } else {\n    if (ratio > 0.5) {\n      ratio = 1 - ratio;\n    }\n\n    for (let i = 0; i < iterations; i++) {\n      let refined = [];\n      refined.push(pts[0]);\n\n      for (let j = 1; j < pts.length; j++) {\n        let points = cut(pts[j - 1], pts[j], ratio);\n        refined = refined.concat(points);\n      }\n\n      if (closed) {\n        refined = refined.concat(cut(pts[pts.length - 1], pts[0], ratio));\n      } else {\n        refined.push(pts[pts.length - 1]);\n      }\n\n      pts = refined;\n    }\n    return pts;\n  }\n}\n\nexport default chaikin;\n","import { render } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport useInterval from 'react-use/lib/useInterval';\nimport useRafState from 'react-use/lib/useRafState';\nimport { Map, NavigationControl, GeolocateControl } from 'maplibre-gl';\nimport { contours } from 'd3-contour';\nimport nanomemoize from 'nano-memoize';\nimport { featureCollection, point, polygon, round } from '@turf/helpers';\n\nconst { VITE_MAPTILER_KEY: MAPTILER_KEY } = import.meta.env;\n\nimport { initializeApp } from 'firebase/app';\nimport {\n  getFirestore,\n  query,\n  collection,\n  orderBy,\n  limit,\n  onSnapshot,\n} from 'firebase/firestore';\n\nimport arrowPath from './assets/arrow-down-white.png';\nimport iconSVGPath from './icons/icon-standalone.svg';\nimport firePath from './assets/fire-outline-black.png';\n\nimport chaikin from './utils/chaikin';\n\n// const TESTING_MODE = location.hash === '#test-mode';\n// import testSnapshot from './utils/testSnapshot';\n\n// Initialize Firebase\nconst firebaseApp = initializeApp({\n  projectId: 'check-weather-sg',\n});\nconst db = getFirestore(firebaseApp);\n\nconst width = 217,\n  height = 120;\nconst center = [103.8475, 1.3011];\nconst lowerLat = 1.156,\n  upperLat = 1.475,\n  lowerLong = 103.565,\n  upperLong = 104.13;\nconst distanceLong = Math.abs(upperLong - lowerLong);\nconst distanceLat = Math.abs(upperLat - lowerLat);\n\nconst bboxGeoJSON = polygon([\n  [\n    [-180, 90],\n    [180, 90],\n    [180, -90],\n    [-180, -90],\n    [-180, 90],\n  ],\n  [\n    [lowerLong, upperLat],\n    [upperLong, upperLat],\n    [upperLong, lowerLat],\n    [lowerLong, lowerLat],\n    [lowerLong, upperLat],\n  ],\n]);\n\nconst intensityColors = [\n  '#40FFFD',\n  '#3BEEEC',\n  '#32D0D2',\n  '#2CB9BD',\n  '#229698',\n  '#1C827D',\n  '#1B8742',\n  '#229F44',\n  '#27B240',\n  '#2CC53B',\n  '#30D43E',\n  '#38EF46',\n  '#3BFB49',\n  '#59FA61',\n  '#FEFB63',\n  '#FDFA53',\n  '#FDEB50',\n  '#FDD74A',\n  '#FCC344',\n  '#FAB03F',\n  '#FAA23D',\n  '#FB8938',\n  '#FB7133',\n  '#F94C2D',\n  '#F9282A',\n  '#DD1423',\n  '#BE0F1D',\n  '#B21867',\n  '#D028A6',\n  '#F93DF5',\n];\nconst intensityColorsCount = intensityColors.length;\n\nconst sgPolygon = {\n  type: 'Polygon',\n  coordinates: [\n    [\n      [103.56983184814452, 1.1984523335134731],\n      [103.71986389160156, 1.1459349466540576],\n      [104.13459777832031, 1.2763684180848154],\n      [104.0789794921875, 1.3580576343735706],\n      [104.09442901611328, 1.3913503559342686],\n      [104.08344268798828, 1.4260154737416286],\n      [104.04155731201172, 1.4462651532861726],\n      [103.97151947021484, 1.4229265238497912],\n      [103.9368438720703, 1.4304772829308758],\n      [103.89667510986328, 1.4263586901405338],\n      [103.86817932128906, 1.4555318956783565],\n      [103.81153106689452, 1.4788701887242242],\n      [103.75968933105469, 1.4469515799492016],\n      [103.72535705566406, 1.4596504356431457],\n      [103.67523193359375, 1.4308204986633148],\n      [103.65943908691406, 1.4067952740787528],\n      [103.61721038818358, 1.323391529857783],\n      [103.56983184814452, 1.1984523335134731],\n    ],\n  ],\n};\n\nif (window.$map) window.$map.remove();\n\nconst bounds = [lowerLong, lowerLat, upperLong, upperLat];\nconst fitBoundsOptions = () => ({\n  padding: window.innerWidth > 640 && window.innerHeight > 640 ? 120 : 0,\n});\nconst maxZoom = 14;\nconst map = (window.$map = new Map({\n  container: 'map',\n  center,\n  // style: 'mapbox://styles/mapbox/dark-v10?optimize=true',\n  // style: 'mapbox://styles/cheeaun/ck7rpspsa2mwh1imt7s5ual7l',\n  style: `https://api.maptiler.com/maps/aecd4cb7-a35b-4c10-89aa-0f4bd52ed1cb/style.json?key=${MAPTILER_KEY}`,\n  minZoom: 8,\n  maxZoom,\n  renderWorldCopies: false,\n  boxZoom: false,\n  pitchWithRotate: false,\n  dragRotate: false,\n  touchPitch: false,\n  attributionControl: false,\n  bounds,\n  fitBoundsOptions: fitBoundsOptions(),\n}));\nmap.touchZoomRotate.disableRotation();\n\n// Controls\nmap.addControl(\n  new NavigationControl({\n    showCompass: false,\n  }),\n  'top-right',\n);\nmap.addControl(\n  new GeolocateControl({\n    trackUserLocation: true,\n  }),\n  'top-right',\n);\n\nclass SnapBoundaryControl {\n  onAdd(map) {\n    this._map = map;\n    this._container = document.createElement('div');\n    this._container.className = 'maplibregl-ctrl maplibregl-ctrl-group';\n\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.title = 'Snap to boundary';\n    button.innerHTML =\n      '<svg height=\"100%\" width=\"100%\" viewBox=\"0 0 24 24\" fill=\"#333\"><path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm-7 7H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4z\"/></svg>';\n    button.onclick = (e) => {\n      e.preventDefault();\n      this._container.hidden = true;\n      map.fitBounds(bounds, fitBoundsOptions(), { snap: true });\n    };\n    this._container.appendChild(button);\n\n    this._container.hidden = true;\n    map.on('moveend', (e) => {\n      if (e.snap) return;\n      this._container.hidden = false;\n    });\n\n    return this._container;\n  }\n  onRemove() {\n    this._container.parentNode.removeChild(this._container);\n    this._map = undefined;\n  }\n}\nmap.addControl(new SnapBoundaryControl(), 'top-right');\n\nconst $loader = document.getElementById('loader');\nmap.on('dataloading', (e) => {\n  $loader.hidden = false;\n});\nlet dataDone = null;\nmap.on('data', (e) => {\n  clearTimeout(dataDone);\n  dataDone = setTimeout(() => {\n    $loader.hidden = true;\n  }, 500);\n});\n\nconst $legend = document.getElementById('legend');\nconst $infoButton = document.getElementById('info-button');\nconst $legendClose = document.getElementById('legend-close');\n$infoButton.onclick = (e) => {\n  e.preventDefault();\n  $legend.hidden = !$legend.hidden;\n};\n$legendClose.onclick = (e) => {\n  e.preventDefault();\n  $legend.hidden = true;\n};\n\nconst convertRainID2Time = nanomemoize((id) => {\n  const time = (id.match(/\\d{4}$/) || [''])[0].replace(\n    /(\\d{2})(\\d{2})/,\n    (m, m1, m2) => {\n      let h = parseInt(m1, 10);\n      const ampm = h >= 12 ? 'PM' : 'AM';\n      if (h == 0) h = 12;\n      if (h > 12) h -= 12;\n      return h + ':' + m2 + ' ' + ampm;\n    },\n  );\n  return time;\n});\n\nconst convertX2Lng = nanomemoize((x) =>\n  round(lowerLong + (x / width) * distanceLong, 4),\n);\nconst convertY2Lat = nanomemoize((y) =>\n  round(upperLat - (y / height) * distanceLat, 4),\n);\n\nconst zerosArray = new Array(width * height).fill(0);\nconst convertRadar2Values = nanomemoize(\n  (id, radar) => {\n    const rows = radar.trimEnd().split(/\\n/g);\n    const values = zerosArray.slice();\n    for (let y = 0, l = rows.length; y < l; y++) {\n      const chars = rows[y];\n      for (let x = chars.search(/[^\\s]/), rl = chars.length; x < rl; x++) {\n        const char = chars[x];\n        if (char && char !== ' ') {\n          const intensity = char.charCodeAt() - 33;\n          values[y * width + x] = intensity;\n        }\n      }\n    }\n    return values;\n  },\n  {\n    maxArgs: 1,\n  },\n);\n\n// console.log({ intensityColors });\nconst contour = contours()\n  .size([width, height])\n  // .thresholds(\n  //   intensityColors.map((_, i) => Math.ceil((i / intensityColorsCount) * 100)),\n  //   // .filter((_, i) => i % 2 !== 0),\n  // )\n  .thresholds([4, 10, 20, 30, 40, 50, 60, 70, 80, 85, 90, 95, 97.5])\n  .smooth(false);\nconst convertValues2GeoJSON = nanomemoize(\n  (id, values) => {\n    const results = [];\n    const conValues = contour(values);\n    for (let i = 0, l = conValues.length; i < l; i++) {\n      const { type, value, coordinates } = conValues[i];\n      if (coordinates.length) {\n        results.push({\n          type: 'Feature',\n          properties: { intensity: value, id },\n          geometry: {\n            type,\n            coordinates: coordinates.map((c1) =>\n              c1.map((c2) => {\n                c2.pop(); // Remove last coord\n                return chaikin(c2).map(([x, y]) => [\n                  convertX2Lng(x),\n                  convertY2Lat(y),\n                ]);\n              }),\n            ),\n          },\n        });\n      }\n    }\n    return results;\n  },\n  {\n    maxArgs: 1,\n  },\n);\n\nconst genMidValues = nanomemoize(\n  (id, values1, values2) => {\n    const midValues = [];\n    for (let i = 0, l = values1.length; i < l; i++) {\n      midValues[i] = (values1[i] + values2[i]) / 2;\n    }\n    return midValues;\n  },\n  {\n    maxArgs: 1,\n  },\n);\n\nconst showObservations = async () => {\n  try {\n    // Try the new API first\n    const response = await fetch(\n      'https://api2.checkweather.sg/v1/observations',\n    );\n    if (!response.ok) throw new Error('New API failed');\n    const data = await response.json();\n    console.log(data);\n    // Test mock wbgt data\n    // data.forEach((d) => {\n    //   // Set low to high\n    //   if (d.wbgt < 31) d.wbgt = 35;\n    // });\n    updateObservations(data);\n  } catch (error) {\n    console.log('Falling back to old API');\n    // Fallback to old API if new one fails\n    fetch('https://api.checkweather.sg/v2/observations')\n      .then((res) => res.json())\n      .then(updateObservations)\n      .catch(console.error);\n  }\n};\n\nconst updateObservations = (data) => {\n  // console.log('observations', data);\n  const points = data.map((d) => {\n    const { id, lng, lat, ...props } = d;\n    return point([lng, lat], props, { id });\n  });\n  const pointsCollection = featureCollection(points);\n  map.getSource('observations').setData(pointsCollection);\n};\n\nconst rafInterval = (fn, delay, immediate = false) => {\n  if (immediate) fn();\n  setTimeout(requestAnimationFrame, delay, () => {\n    fn();\n    rafInterval(fn, delay);\n  });\n};\n\nconst ClipPathSparkline = ({\n  values = [],\n  maxValue = null,\n  smoothIterations = 1,\n  style = {},\n  ...props\n}) => {\n  if (!values.length) return null;\n  const total = values.length - 1;\n  const max = maxValue || Math.max(...values);\n  let path = '';\n  chaikin(\n    values.map((v, i) => {\n      const x = Math.round((i / total) * 100);\n      const y = Math.round((v / max) * 100);\n      return [x, y];\n    }),\n    smoothIterations,\n    false,\n  ).forEach((p, i) => {\n    if (i > 0) path += ',';\n    path += `${p[0]}% ${100 - p[1]}%`;\n  });\n  return (\n    <div\n      {...props}\n      style={{\n        ...style,\n        clipPath: `polygon(0 100%, ${path}, 100% 100%)`,\n      }}\n    />\n  );\n};\n\nconst testRadar = () => {\n  let test = '';\n  for (let i = 0; i < height; i++) {\n    for (let j = 0; j < width; j++) {\n      const intensity = ~~Math.round((j / width) * 100);\n      const c = String.fromCharCode(intensity + 33);\n      test += c;\n    }\n    test += '\\n';\n  }\n  return test;\n};\n\nfunction debounce(fn, wait = 1) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn.call(this, ...args), wait);\n  };\n}\n\nconst styleDataLoaded = new Promise((res) => {\n  map.once('styledata', res);\n});\n\nconst RAINAREA_COUNT = 25;\nconst weatherDB = query(\n  collection(db, 'weather'),\n  orderBy('id', 'desc'),\n  limit(RAINAREA_COUNT),\n);\n\nconst heatStressOpacityStyle = [\n  'interpolate',\n  ['linear'],\n  ['zoom'],\n  10,\n  1,\n  12,\n  0.25,\n];\n\nlet firstLoad = true;\nlet memorySaverMode = false;\nconst Player = () => {\n  const [loading, setLoading] = useState(false);\n  const [index, setIndex] = useRafState(null);\n  const [snapshots, setSnapshots] = useRafState([]);\n  const [playing, setPlaying] = useState(false);\n  const [fwd, setFwd] = useState(false);\n  const [docHidden, setDocHidden] = useState(document.hidden);\n\n  useEffect(() => {\n    document.addEventListener(\n      'visibilitychange',\n      () => {\n        setDocHidden(document.hidden);\n      },\n      false,\n    );\n  }, []);\n\n  const debouncedOnSnapshot = debounce((s) => {\n    // if (TESTING_MODE) s = testSnapshot();\n    if (firstLoad) console.timeEnd('Fetch Snapshots');\n    setLoading(false);\n\n    // memorySaverMode = s.docs.every(\n    //   (d) => d.data().coverage_percentage.all > 90,\n    // );\n    const averageCoverage =\n      s.docs\n        .map((d) => d.data().coverage_percentage.all)\n        .reduce((a, b) => a + b) / s.docs.length;\n    console.log({ averageCoverage });\n    memorySaverMode = averageCoverage > 25;\n\n    const processSnapshots = () => {\n      console.time('Process Snapshots');\n      const shots = [];\n      const geoJSONList = [];\n\n      const docs = s.docs.reverse();\n      docs.forEach((doc, i) => {\n        const rainarea = doc.data();\n        const values = convertRadar2Values(rainarea.id, rainarea.radar);\n        const geojsons = convertValues2GeoJSON(rainarea.id, values);\n        geoJSONList.push(...geojsons);\n\n        const nextDoc = docs[i + 1];\n        if (nextDoc && !memorySaverMode) {\n          const nextRainArea = nextDoc.data();\n          const nextValues = convertRadar2Values(\n            nextRainArea.id,\n            nextRainArea.radar,\n          );\n          const midID = `${\n            (Number(rainarea.id) + Number(nextRainArea.id)) / 2\n          }`;\n          const midValues = genMidValues(midID, values, nextValues);\n          const nextGeojsons = convertValues2GeoJSON(midID, midValues);\n          geoJSONList.push(...nextGeojsons);\n        }\n\n        shots.push(rainarea);\n      });\n\n      const collection = featureCollection(geoJSONList);\n      styleDataLoaded.then(() => {\n        if (!map.getFilter('rainradar')) {\n          map.setFilter('rainradar', ['==', 'id', s.docs[0].data().id], {\n            validate: false,\n          });\n        }\n        map.getSource('rainradar').setData(collection);\n        if (!index) setIndex(shots.length);\n        setSnapshots(shots);\n      });\n      console.timeEnd('Process Snapshots');\n    };\n\n    if (firstLoad) {\n      const firstDoc = s.docs[0].data();\n      // const radar = testRadar();\n      const values = convertRadar2Values(firstDoc.id, firstDoc.radar);\n      const geojsons = convertValues2GeoJSON(firstDoc.id, values);\n      styleDataLoaded.then(() => {\n        map.getSource('rainradar').setData(featureCollection(geojsons));\n        firstLoad = false;\n        map.once('idle', () => requestAnimationFrame(processSnapshots));\n      });\n    } else {\n      processSnapshots();\n    }\n  }, 300);\n\n  useEffect(() => {\n    let unsub = () => {};\n    if (docHidden) {\n      setPlaying(false);\n      firstLoad = false;\n    } else {\n      console.log('Start Snapshots');\n      console.time('Fetch Snapshots');\n      setLoading(true);\n      unsub = onSnapshot(weatherDB, debouncedOnSnapshot);\n    }\n    return () => unsub();\n  }, [docHidden]);\n\n  const snapshotsCount = snapshots.length;\n  if (snapshotsCount <= 1) return null;\n\n  useEffect(() => {\n    if (index && snapshotsCount) {\n      const roundIndex = Math.round(index);\n      const floatIndex = Math.round(index / 0.5) * 0.5;\n\n      const shot = snapshots[roundIndex - 1];\n      let id = shot.id;\n\n      if (floatIndex !== roundIndex && !memorySaverMode) {\n        const floorSnapshot = snapshots[Math.floor(floatIndex) - 1];\n        const ceilSnapshot = snapshots[Math.ceil(floatIndex) - 1];\n        if (floorSnapshot && ceilSnapshot) {\n          const midID = `${(floorSnapshot.dt + ceilSnapshot.dt) / 2}`;\n          id = midID;\n        }\n      }\n\n      setFwd(false);\n      map.setFilter('rainradar', ['==', 'id', id], {\n        validate: false,\n      });\n\n      const faded = index < snapshotsCount - 1;\n      map.setPaintProperty('tempreadings', 'text-opacity', faded ? 0.3 : 1);\n      map.setPaintProperty('humidreadings', 'text-opacity', faded ? 0.3 : 1);\n      map.setPaintProperty('rainreadings', 'text-opacity', faded ? 0.3 : 1);\n      map.setPaintProperty('windirections', 'icon-opacity', faded ? 0.1 : 0.3);\n      map.setPaintProperty(\n        'heatstress',\n        'icon-opacity',\n        faded ? 0.1 : heatStressOpacityStyle,\n      );\n    }\n  }, [index, snapshots]);\n\n  useEffect(() => {\n    if (index < snapshotsCount && !playing) {\n      setFwd(true);\n    }\n  }, [snapshots]);\n\n  const { id } = snapshots[Math.round(index) - 1];\n  const sgCoveragePercentages = snapshots.map((s) => s.coverage_percentage.sg);\n  const maxSGCoveragePercentage = Math.max(...sgCoveragePercentages);\n\n  useInterval(\n    () => {\n      const endOfSnapshots = index >= snapshotsCount;\n      if (endOfSnapshots && maxSGCoveragePercentage < 5) {\n        setPlaying(false);\n      } else {\n        setIndex(endOfSnapshots ? 1 : index + 0.5);\n      }\n    },\n    playing ? (index === snapshotsCount ? 2000 : 100) : null,\n  );\n\n  const indexPercentage = ((index - 1) / (snapshotsCount - 1)) * 100;\n  const sparklineHeight = 40;\n  const playIconSize = Math.max((maxSGCoveragePercentage / 100) * 24, 16);\n\n  return (\n    <div id=\"player-content\" class={loading ? 'loading' : ''}>\n      <div\n        id=\"player-button\"\n        class={playing ? 'playing' : ''}\n        onClick={() => {\n          if (fwd) {\n            setIndex(snapshotsCount);\n            return;\n          }\n          if (index === snapshotsCount && !playing) setIndex(1);\n          setPlaying(!playing);\n        }}\n      >\n        <div id=\"player-icon\">\n          <svg width={playIconSize} height={playIconSize} viewBox=\"0 0 24 24\">\n            <path\n              d={\n                fwd\n                  ? 'M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z'\n                  : playing\n                  ? 'M6 19h4V5H6v14zm8-14v14h4V5h-4z'\n                  : 'M8 5v14l11-7z'\n              }\n            />\n          </svg>\n        </div>\n      </div>\n      <div id=\"player-range\">\n        <div\n          id=\"player-time\"\n          class={index === snapshotsCount ? 'now' : ''}\n          style={{\n            left: `${indexPercentage}%`,\n            transform: `translateX(-${indexPercentage}%)`,\n          }}\n        >\n          {convertRainID2Time(id)}\n        </div>\n        <ClipPathSparkline\n          values={sgCoveragePercentages}\n          maxValue={100}\n          smoothIterations={2}\n          style={{ height: sparklineHeight }}\n          id=\"player-sparkline\"\n        />\n        <progress value={index} max={snapshotsCount} />\n        <div id=\"player-labels\">\n          <span>{convertRainID2Time(snapshots[0].id)}</span>\n          <span>\n            {convertRainID2Time(\n              snapshots[Math.round(snapshotsCount / 2) - 1].id,\n            )}\n          </span>\n          <span>{convertRainID2Time(snapshots[snapshotsCount - 1].id)}</span>\n        </div>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max={snapshotsCount}\n          step=\"any\"\n          value={index}\n          onInput={(e) => {\n            setPlaying(false);\n            setIndex(e.target.value);\n          }}\n          onMouseUp={() => setIndex(Math.round(index))}\n          onTouchEnd={(e) => {\n            setIndex(Math.round(index));\n            const touch = e.changedTouches[0];\n            if (touch) {\n              const { width, x } = touch.target.getBoundingClientRect();\n              const padding = 8;\n              const actualWidth = width - padding * 2;\n              const index =\n                ((touch.clientX - padding - x) / actualWidth) *\n                  (snapshotsCount - 1) +\n                1;\n              setIndex(\n                Math.max(1, Math.min(snapshotsCount, Math.round(index))),\n              );\n            }\n          }}\n          onTouchCancel={() => setIndex(Math.round(index))}\n        />\n      </div>\n    </div>\n  );\n};\nrender(<Player />, document.getElementById('player'));\n\n(async () => {\n  await styleDataLoaded;\n\n  // Add sources\n  map.addSource('observations', {\n    type: 'geojson',\n    data: {\n      type: 'FeatureCollection',\n      features: [],\n    },\n    tolerance: 5,\n    buffer: 0,\n    maxzoom: maxZoom,\n  });\n  map.addSource('rainradar', {\n    type: 'geojson',\n    data: {\n      type: 'FeatureCollection',\n      features: [],\n    },\n    maxzoom: maxZoom,\n    // tolerance: 0.5,\n    // buffer: screen.width > 1280 ? 128 : 0,\n  });\n\n  const layers = map.getStyle().layers;\n  // console.log({ layers });\n\n  let labelLayerId;\n  for (let i = 0; i < layers.length; i++) {\n    const { id, type, layout } = layers[i];\n    if (type === 'symbol' && layout['text-field']) {\n      // Find the index of the first symbol layer in the map style\n      if (!labelLayerId) {\n        labelLayerId = layers[i].id;\n      }\n    }\n\n    // Fade out all other labels\n    if (type === 'symbol') {\n      const textOpacity = map.getPaintProperty(id, 'text-opacity');\n      map.setPaintProperty(id, 'text-opacity', [\n        'case',\n        ['within', sgPolygon],\n        textOpacity || 1,\n        0,\n      ]);\n      const iconOpacity = map.getPaintProperty(id, 'icon-opacity');\n      if (typeof iconOpacity === 'number') {\n        map.setPaintProperty(id, 'icon-opacity', [\n          'case',\n          ['within', sgPolygon],\n          iconOpacity || 1,\n          0,\n        ]);\n      }\n    }\n  }\n\n  const radarColors = intensityColors.reduce((acc, color, i) => {\n    const intensity = ((i + 1) / intensityColorsCount) * 100;\n    acc.push(intensity, color);\n    return acc;\n  }, []);\n  const radarFillColor = [\n    'interpolate-lab',\n    ['linear'],\n    ['number', ['get', 'intensity'], 0],\n    0,\n    'transparent',\n    ...radarColors,\n  ];\n\n  // Using fill-extrusion here because\n  // https://github.com/mapbox/mapbox-gl-js/issues/4090#issuecomment-1054711990\n  // Tiles overlap and the opacity overlaps\n  const waterOverlayColor = '#070707';\n  const waterOverlayOpacity = 0.6;\n  const waterPaint = {\n    'fill-extrusion-color': waterOverlayColor,\n    'fill-extrusion-opacity': waterOverlayOpacity,\n    'fill-extrusion-base': 100,\n    'fill-extrusion-height': 101,\n    'fill-extrusion-vertical-gradient': false,\n  };\n  map.addLayer(\n    {\n      id: 'water-overlay',\n      type: 'fill-extrusion',\n      source: 'openmaptiles',\n      'source-layer': 'water',\n      paint: waterPaint,\n    },\n    labelLayerId,\n  );\n\n  map.addLayer(\n    {\n      id: 'rainradar',\n      type: 'fill-extrusion',\n      source: 'rainradar',\n      paint: {\n        'fill-extrusion-vertical-gradient': false,\n        'fill-extrusion-height': ['number', ['get', 'intensity'], 0],\n        'fill-extrusion-color': radarFillColor,\n        'fill-extrusion-opacity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          8,\n          1,\n          12,\n          0.15,\n        ],\n      },\n    },\n    'water-overlay',\n  );\n\n  // map.addLayer(\n  //   {\n  //     id: 'rainradar',\n  //     type: 'fill',\n  //     source: 'rainradar',\n  //     layout: {\n  //       'fill-sort-key': ['number', ['get', 'intensity'], 0],\n  //     },\n  //     paint: {\n  //       'fill-antialias': false,\n  //       'fill-color': radarFillColor,\n  //       'fill-opacity': [\n  //         'interpolate',\n  //         ['linear'],\n  //         ['zoom'],\n  //         8,\n  //         ['case', ['>', ['number', ['get', 'intensity'], 0], 90], 1, 0.4],\n  //         12,\n  //         0.05,\n  //       ],\n  //     },\n  //   },\n  //   'water-overlay',\n  // );\n\n  map.addLayer({\n    id: 'tempreadings',\n    type: 'symbol',\n    source: 'observations',\n    minzoom: 8.5,\n    filter: ['all', ['has', 'temp_celcius'], ['>', 'temp_celcius', 0]],\n    layout: {\n      'text-field': '{temp_celcius}°',\n      'text-allow-overlap': true,\n      'text-ignore-placement': true,\n      'text-size': ['interpolate', ['linear'], ['zoom'], 8, 10, 14, 28],\n      'text-padding': 1,\n      'text-font': ['Noto Sans Regular'],\n    },\n    paint: {\n      'text-color': 'yellow',\n      'text-halo-color': '#000',\n      'text-halo-width': 1.5,\n    },\n  });\n\n  const arrowImage = await map.loadImage(arrowPath);\n  map.addImage('arrow', arrowImage.data);\n\n  const fireImage = await map.loadImage(firePath);\n  map.addImage('fire', fireImage.data);\n\n  map.addLayer(\n    {\n      id: 'windirections',\n      type: 'symbol',\n      source: 'observations',\n      filter: ['has', 'wind_direction'],\n      layout: {\n        'icon-image': 'arrow',\n        'icon-rotate': ['get', 'wind_direction'],\n        'icon-allow-overlap': true,\n        'icon-ignore-placement': true,\n        'icon-size': ['interpolate', ['linear'], ['zoom'], 8, 0.05, 14, 0.6],\n      },\n      paint: {\n        'icon-opacity': 0.3,\n      },\n    },\n    'tempreadings',\n  );\n\n  map.addLayer({\n    id: 'humidreadings',\n    type: 'symbol',\n    source: 'observations',\n    minzoom: 10,\n    filter: [\n      'all',\n      ['has', 'relative_humidity'],\n      ['>', 'relative_humidity', 0],\n    ],\n    layout: {\n      'text-field': '{relative_humidity}%',\n      'text-ignore-placement': true,\n      'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 14, 14 * 1.1],\n      'text-offset': [0, -1.2],\n      'text-padding': 0,\n      'text-font': ['Noto Sans Regular'],\n    },\n    paint: {\n      'text-color': 'orange',\n      'text-halo-color': '#000',\n      'text-halo-width': 1.5,\n    },\n  });\n\n  map.addLayer({\n    id: 'rainreadings',\n    type: 'symbol',\n    source: 'observations',\n    minzoom: 12,\n    filter: ['all', ['has', 'rain_mm'], ['>', 'rain_mm', 0]],\n    layout: {\n      'text-field': '{rain_mm}mm',\n      'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 14, 14 * 1.1],\n      'text-ignore-placement': true,\n      'text-offset': [0, 1.2],\n      'text-padding': 0,\n      'text-font': ['Noto Sans Regular'],\n    },\n    paint: {\n      'text-color': 'aqua',\n      'text-halo-color': '#000',\n      'text-halo-width': 1.5,\n    },\n  });\n\n  const heatIconSize = 0.175;\n  const zoomedInHeatIconSize = heatIconSize * 3;\n  const largeHeatIconSize = heatIconSize * 1.5;\n  const zoomedInLargeHeatIconSize = largeHeatIconSize * 3;\n  map.addLayer({\n    id: 'heatstress',\n    type: 'symbol',\n    source: 'observations',\n    minzoom: 8,\n    filter: ['all', ['has', 'wbgt'], ['>=', ['get', 'wbgt'], 31]],\n    layout: {\n      'icon-image': 'fire',\n      'icon-allow-overlap': true,\n      'icon-ignore-placement': true,\n      'icon-size': [\n        'interpolate',\n        ['linear'],\n        ['zoom'],\n        10,\n        ['case', ['<', ['get', 'wbgt'], 33], heatIconSize, largeHeatIconSize],\n        14,\n        [\n          'case',\n          ['<', ['get', 'wbgt'], 33],\n          zoomedInHeatIconSize,\n          zoomedInLargeHeatIconSize,\n        ],\n      ],\n    },\n    paint: {\n      'icon-opacity': heatStressOpacityStyle,\n    },\n  });\n\n  rafInterval(showObservations, 2 * 60 * 1000, true); // every 2 mins\n\n  // Get popover elements\n  const weatherPopover = document.getElementById('weather-popover');\n  const weatherPopoverBody = document.getElementById('weather-popover-body');\n  const tapCircle = document.getElementById('tap-circle');\n\n  // Function to close popover with animation\n  const closePopover = () => {\n    weatherPopover.classList.add('closing');\n    weatherPopover.addEventListener(\n      'animationend',\n      () => {\n        weatherPopover.classList.remove('closing');\n        weatherPopover.hidePopover();\n      },\n      { once: true },\n    );\n  };\n\n  // Close when clicking on the popover content\n  const weatherPopoverContent = document.getElementById(\n    'weather-popover-content',\n  );\n  weatherPopoverContent.onclick = () => {\n    closePopover();\n  };\n\n  // Add click/tap event to find nearby readings with delay to avoid interfering with double-click zoom\n  let clickTimeout;\n  map.on('click', (e) => {\n    clearTimeout(clickTimeout);\n    clickTimeout = setTimeout(() => {\n      const clickedLng = e.lngLat.lng;\n      const clickedLat = e.lngLat.lat;\n\n      // Calculate thumb-sized radius based on zoom level\n      const zoom = map.getZoom();\n      // Base radius in pixels (roughly thumb size)\n      const baseRadiusPixels = 30;\n      // Convert pixels to map units (degrees) based on zoom\n      const metersPerPixel =\n        (40075016.686 * Math.abs(Math.cos((clickedLat * Math.PI) / 180))) /\n        Math.pow(2, zoom + 8);\n      const radiusMeters = baseRadiusPixels * metersPerPixel;\n      const radiusDegrees = radiusMeters / 111320; // Rough conversion: 1 degree ≈ 111.32 km\n\n      // Show tap circle\n      const point = map.project([clickedLng, clickedLat]);\n      tapCircle.style.left = point.x - baseRadiusPixels + 'px';\n      tapCircle.style.top = point.y - baseRadiusPixels + 'px';\n      tapCircle.style.width = baseRadiusPixels * 2 + 'px';\n      tapCircle.style.height = baseRadiusPixels * 2 + 'px';\n      tapCircle.style.display = 'block';\n\n      // Get the current observations data\n      const observationsSource = map.getSource('observations');\n      const observationsData = observationsSource._data;\n\n      if (\n        !observationsData ||\n        !observationsData.features ||\n        observationsData.features.length === 0\n      ) {\n        return; // No dialog if no data\n      }\n\n      // Find nearby observation points (within the calculated radius)\n      const nearbyFeatures = [];\n\n      observationsData.features.forEach((feature) => {\n        const [lng, lat] = feature.geometry.coordinates;\n        // Simple distance calculation (good enough for Singapore's small area)\n        const distance = Math.sqrt(\n          Math.pow(lng - clickedLng, 2) + Math.pow(lat - clickedLat, 2),\n        );\n\n        if (distance <= radiusDegrees) {\n          nearbyFeatures.push({ feature, distance });\n        }\n      });\n\n      // Force animation restart by removing and re-adding the element\n      tapCircle.style.animation = 'none';\n      tapCircle.offsetHeight; // Trigger reflow\n      tapCircle.style.animation = '';\n      tapCircle.className = '';\n\n      if (nearbyFeatures.length === 0) {\n        // Close popover if it's open and no nearby stations found\n        if (weatherPopover.matches(':popover-open')) {\n          closePopover();\n        }\n        return; // No dialog if no nearby stations\n      }\n\n      // Sort by distance and take up to 3 closest stations\n      nearbyFeatures.sort((a, b) => a.distance - b.distance);\n      const stationsToShow = nearbyFeatures.slice(0, 3);\n\n      // Build the dialog HTML with semantic markup\n      let html = '<h3>Readings nearby</h3>';\n      let hasStations = false;\n\n      stationsToShow.forEach((item) => {\n        const props = item.feature.properties;\n        const stationId = item.feature.id || props.id || 'Unknown';\n        const stationName = props.name;\n\n        let readingsHtml = '';\n\n        if (props.temp_celcius !== undefined) {\n          readingsHtml += `<div class=\"weather-reading\">\n          <div class=\"weather-reading-header\">\n            <span class=\"emoji\">🌡️</span>\n            <span>Temperature</span>\n          </div>\n          <div class=\"weather-reading-value\">${props.temp_celcius}°C</div>\n        </div>`;\n        }\n\n        if (props.relative_humidity !== undefined) {\n          readingsHtml += `<div class=\"weather-reading\">\n          <div class=\"weather-reading-header\">\n            <span class=\"emoji\">💧</span>\n            <span>Humidity</span>\n          </div>\n          <div class=\"weather-reading-value\">${props.relative_humidity}%</div>\n        </div>`;\n        }\n\n        if (props.rain_mm !== undefined) {\n          readingsHtml += `<div class=\"weather-reading\">\n          <div class=\"weather-reading-header\">\n            <span class=\"emoji\">🌧️</span>\n            <span>Rain</span>\n          </div>\n          <div class=\"weather-reading-value\">${props.rain_mm}mm</div>\n        </div>`;\n        }\n\n        if (\n          props.wind_speed !== undefined ||\n          props.wind_direction !== undefined\n        ) {\n          let windValue = '';\n\n          if (props.wind_speed !== undefined) {\n            const windSpeedKmh = Math.round(props.wind_speed * 1.852);\n            windValue += `${windSpeedKmh} km/h`;\n          }\n\n          if (props.wind_direction !== undefined) {\n            if (windValue) windValue += ' ';\n            windValue += `<img src=\"${arrowPath}\" class=\"wind-arrow\" style=\"transform: rotate(${props.wind_direction}deg)\" alt=\"Wind direction\">`;\n          }\n\n          readingsHtml += `<div class=\"weather-reading\">\n          <div class=\"weather-reading-header\">\n            <span class=\"emoji\">💨</span>\n            <span>Wind</span>\n          </div>\n          <div class=\"weather-reading-value\">${windValue}</div>\n        </div>`;\n        }\n\n        if (props.wbgt !== undefined && props.wbgt >= 31) {\n          let riskClass = 'moderate';\n          let riskText = 'Moderate';\n          if (props.wbgt >= 33) {\n            riskClass = 'high';\n            riskText = 'High';\n          }\n\n          readingsHtml += `<div class=\"weather-reading heat-risk ${riskClass}\">\n          <div class=\"weather-reading-header\">\n            <span class=\"emoji\">🔥</span>\n            <span>Heat stress</span>\n          </div>\n          <div class=\"weather-reading-value\">${props.wbgt}°C (${riskText})</div>\n        </div>`;\n        }\n\n        // Only show weather station if it has readings\n        if (readingsHtml) {\n          hasStations = true;\n          html += `<div class=\"weather-station\">\n            <div class=\"station-name\">${stationName || stationId}</div>\n            <div class=\"weather-readings\">\n              ${readingsHtml}\n            </div>\n          </div>`;\n        }\n      });\n\n      // Only show popover if there are stations with readings\n      if (hasStations) {\n        // Use long animation when stations with readings are found\n        tapCircle.classList.add('long-duration');\n        weatherPopoverBody.innerHTML = html;\n        weatherPopover.showPopover();\n      } else {\n        // Close popover if it's open and no readings found\n        if (weatherPopover.matches(':popover-open')) {\n          closePopover();\n        }\n      }\n    }, 200); // 200ms delay to allow double-click to work\n  });\n\n  // Cancel the weather reading click on double-click to allow zoom\n  map.on('dblclick', () => {\n    clearTimeout(clickTimeout);\n  });\n\n  // Mask the area outside Singapore\n  map.addLayer(\n    {\n      id: 'bbox',\n      type: 'fill',\n      source: {\n        type: 'geojson',\n        tolerance: 10,\n        buffer: 0,\n        data: bboxGeoJSON,\n        maxzoom: maxZoom,\n      },\n      paint: {\n        'fill-color': 'rgba(0,0,0,.5)',\n        'fill-antialias': false,\n      },\n    },\n    labelLayerId,\n  );\n})();\n\nstyleDataLoaded.then(() => {\n  // If URL search params = ?screensaver\n  if (new URL(window.location.href).searchParams.has('screensaver')) {\n    // Add .screensaver class to body\n    document.body.classList.add('screensaver');\n    // Fit bounds to the edges of the viewport\n    map.fitBounds([\n      [lowerLong, lowerLat],\n      [upperLong, upperLat],\n    ]);\n  }\n});\n\nconst isSafari = navigator.vendor && navigator.vendor.indexOf('Apple') !== -1;\nif (isSafari) {\n  setTimeout(function () {\n    const ratio = window.devicePixelRatio;\n    const canvas = document.createElement('canvas');\n    const w = (canvas.width = window.screen.width * ratio);\n    const h = (canvas.height = window.screen.height * ratio);\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = '#343332';\n    ctx.fillRect(0, 0, w, h);\n    const icon = new Image();\n    icon.onload = () => {\n      const aspectRatio = icon.width / icon.height;\n      icon.width = w / 2;\n      icon.height = w / 2 / aspectRatio;\n      ctx.drawImage(\n        icon,\n        (w - icon.width) / 2,\n        (h - icon.height) / 2,\n        icon.width,\n        icon.height,\n      );\n      document.head.insertAdjacentHTML(\n        'beforeend',\n        `<link rel=\"apple-touch-startup-image\" href=\"${canvas.toDataURL()}\">`,\n      );\n    };\n    icon.src = iconSVGPath;\n  }, 5000);\n}\n","export default \"__VITE_ASSET__BAxoas1a__\"","export default \"__VITE_ASSET__DrlAtYsH__\""],"names":["arrowPath","cut","start","end","ratio","chaikin","pts","iterations","closed","nCorners","length","newPts","i","ptA","ptB","newPtA","newPtB","push","refined","j","points","concat","VITE_MAPTILER_KEY","MAPTILER_KEY","db","getFirestore","initializeApp","projectId","width","lowerLat","upperLat","lowerLong","upperLong","distanceLong","Math","abs","distanceLat","bboxGeoJSON","polygon","intensityColors","intensityColorsCount","sgPolygon","type","coordinates","window","$map","remove","bounds","fitBoundsOptions","padding","innerWidth","innerHeight","map","Map","container","center","style","minZoom","maxZoom","renderWorldCopies","boxZoom","pitchWithRotate","dragRotate","touchPitch","attributionControl","touchZoomRotate","disableRotation","addControl","NavigationControl","showCompass","GeolocateControl","trackUserLocation","onAdd","this","_map","_container","document","createElement","className","button","title","innerHTML","onclick","e","preventDefault","hidden","fitBounds","snap","appendChild","map2","on","onRemove","parentNode","removeChild","$loader","getElementById","dataDone","clearTimeout","setTimeout","$legend","$infoButton","$legendClose","convertRainID2Time","nanomemoize","id","match","replace","m","m1","m2","h","parseInt","ampm","convertX2Lng","x","round","convertY2Lat","y","zerosArray","Array","fill","convertRadar2Values","radar","rows","trimEnd","split","values","slice","l","chars","search","rl","char","intensity","charCodeAt","maxArgs","contour","contours","size","thresholds","smooth","convertValues2GeoJSON","results","conValues","value","properties","geometry","c1","c2","pop","genMidValues","values1","values2","midValues","showObservations","async","response","fetch","ok","Error","data","json","console","log","updateObservations","error","then","res","catch","d","lng","lat","props","point","pointsCollection","featureCollection","getSource","setData","rafInterval","fn","delay","immediate","requestAnimationFrame","ClipPathSparkline","maxValue","smoothIterations","total","max","path","jsx","v","forEach","p","clipPath","styleDataLoaded","Promise","once","weatherDB","query","collection","orderBy","limit","heatStressOpacityStyle","firstLoad","memorySaverMode","render","loading","setLoading","useState","index","setIndex","useRafState","snapshots","setSnapshots","playing","setPlaying","fwd","setFwd","docHidden","setDocHidden","useEffect","addEventListener","debouncedOnSnapshot","wait","timeout","args","call","debounce","s","timeEnd","averageCoverage","docs","coverage_percentage","all","reduce","a","b","processSnapshots","time","shots","geoJSONList","reverse","doc","rainarea","geojsons","nextDoc","nextRainArea","nextValues","midID","Number","nextGeojsons","getFilter","setFilter","validate","firstDoc","unsub","onSnapshot","snapshotsCount","roundIndex","floatIndex","floorSnapshot","floor","ceilSnapshot","ceil","id2","dt","faded","setPaintProperty","sgCoveragePercentages","sg","maxSGCoveragePercentage","useInterval","endOfSnapshots","indexPercentage","playIconSize","class","children","onClick","u","height","viewBox","left","transform","min","step","onInput","target","onMouseUp","onTouchEnd","touch","changedTouches","getBoundingClientRect","actualWidth","clientX","onTouchCancel","addSource","features","tolerance","buffer","maxzoom","layers","getStyle","labelLayerId","layout","textOpacity","getPaintProperty","iconOpacity","radarFillColor","acc","color","waterPaint","addLayer","source","paint","minzoom","filter","arrowImage","loadImage","addImage","fireImage","heatIconSize","zoomedInHeatIconSize","largeHeatIconSize","weatherPopover","weatherPopoverBody","tapCircle","closePopover","classList","add","hidePopover","clickTimeout","clickedLng","lngLat","clickedLat","zoom","getZoom","radiusDegrees","cos","PI","pow","project","top","baseRadiusPixels","display","observationsData","_data","nearbyFeatures","feature","distance","sqrt","animation","offsetHeight","matches","sort","stationsToShow","html","hasStations","item","stationId","stationName","name","readingsHtml","temp_celcius","relative_humidity","rain_mm","wind_speed","wind_direction","windValue","windSpeedKmh","wbgt","riskClass","riskText","showPopover","URL","location","href","searchParams","has","body","navigator","vendor","indexOf","devicePixelRatio","canvas","w","screen","ctx","getContext","fillStyle","fillRect","icon","Image","onload","aspectRatio","drawImage","head","insertAdjacentHTML","toDataURL","src"],"mappings":"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"}